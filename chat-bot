#!/bin/bash

if [[ $# -gt 2 ]]; then #Verifies the number of arguments given, if more than 2, send out an error to sterr
    echo "<< chat-bot destinataire [pseudo] >>" >&2
    exit 1
fi

init_variables(){
    #fonction intialisant les variables globaux   
    RESPONSE_FILE_NAME="liste-bot.txt"
    ROBOT_DEFAULT_NAME="bot"
    USERNAME="$1"
    BOTNAME="${2:-$ROBOT_DEFAULT_NAME}"

}

create_communication_pipes(){
    
    coproc CHAT_PROCESS { ./chat "$BOTNAME" "$USERNAME" --bot; }
}

trim_message(){
    local msg=$1

    # If the message starts with [$USERNAME], remove it and the following space
    if [[ "$msg" =~ ^\[$USERNAME\]\  ]]; then
        msg="${msg//\[$USERNAME\] /}"
    fi

    echo "$msg"
}

#fonction pour enovyer les messages au destinataire
send_message(){
    local msg="$1"
    echo "$msg" >&"${CHAT_PROCESS[1]}";
}

#fonction pour lire les messages du destinataire
read_message(){
    local msg
    read -r msg <&"${CHAT_PROCESS[0]}"
    echo "$msg"
}

#fonction executer la command 'liste'
list_current_directory(){
    while IFS= read -r line; do
        send_message "$line"
    done < <(ls)
}

#fonnction pour lire un fichier --> commande 'li'
read_file(){
    local to_read_file="$1"
    # -f est fichier de type ordinaire != foder/special file
    if [[ -f "$to_read_file" ]]; then
        while IFS= read -r line; do
            send_message "$line"
        done < <(cat "$to_read_file")
    else
        "[ERROR] : '$to_read_file' n'existe pas!" >&2
        unknown_command
    fi
}

#fonction pour la commande whoami
whoami(){
    local username="$USERNAME"
    send_message "$username"
}

#fonction pour la commande au revoir
goodbye(){
    send_message "Au revoir !"
    exit 0
}

unknown_command(){
    send_message "ðŸ¤– ?"
}

check_listebot_file() {
    local user_command="$1"

    # Check if the user command is empty
    if [[ -z "$user_command" ]]; then
        echo "[ERROR]: Empty command received!" >&2
        return
    fi


    local line
    line=$(grep -w "^$user_command" "$RESPONSE_FILE_NAME")

    if [[ ! -f "$RESPONSE_FILE_NAME" ]]; then
        send_message "[ERROR]: Response file not found!"
        return
    fi

    echo "DEBUG bot_response is : $line" >&2

    if [[ -n "$line" ]]; then
        local answer="${line#* }"
        send_message "$answer"
    else
        unknown_command
    fi
}



process_commands(){
    local msg=""
    while true; do
        msg=$(read_message)

        msg=$(trim_message "$msg")

        case "$msg" in 
            "liste") 
                 list_current_directory
                ;;
            li\ *)
                local to_read_file
                to_read_file="$(echo "${msg#li }" | xargs)"
                read_file "$to_read_file"
                ;;
            "au revoir") 
                goodbye
                ;;
            "qui suis-je")
                whoami
                ;;
            *)
                check_listebot_file "$msg"
                ;;
        esac
    done
    
}

# MAIN --> RUN
init_variables "$@"
create_communication_pipes
process_commands
