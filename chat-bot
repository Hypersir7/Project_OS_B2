#!/bin/bash

# on controle qu'il y a le psudo 
if [ -z "$1" ] || [ "$1" == "bot" ]; then
    echo "Error: Wrong format, Pseudo is missing !."
    exit 1
fi

chat="./chat"
user=$1
me="bot"

# on demmarre chat et on rederige ses stdin et stdout vers les tuyaux qu'on a cree
coproc CHAT { "$chat" "$me" "$user" "--bot"; } 

# files discriptors
COPROC_READ=${CHAT[0]}
COPROC_WRITE=${CHAT[1]}

# Set non-blocking mode for reading
exec {COPROC_READ}<&${COPROC_READ}
exec {COPROC_WRITE}>&${COPROC_WRITE}

coproc_pid=${CHAT_PID}
chat_pid=$(ps --ppid "$coproc_pid" -o pid= | awk '{print $1}')


write_to_chat_stdin() {
    # une fonction qui ecrit dans le stdin de chat
    local message="$1"
    echo "$message" >&${COPROC_WRITE}

}

process_chat_output() {
    # cette fonction va enlever le "[pseudo]" du message/ commande recu de l'utilisateur
    # cad le premier mot d'une ligne 
    local input="$1"
    # enlever le premier mot
    echo "$input" | awk '{$1=""; sub(/^ /, ""); print}'
}

#fonction executer la command 'liste'
list_current_directory(){
    local lst_dir="$(ls)"
    local res=""
    while IFS= read -r line; do
        res+="$line "
    done <<< "$lst_dir"

    write_to_chat_stdin "$res"
}

#fonnction pour lire un fichier --> commande 'li'
read_file(){
    local to_read_file="$1"
    file_content=""
    # -f est fichier de type ordinaire != folder/special file
    if [[ -f "$to_read_file" ]]
    then
        while IFS= read -r line; do
            write_to_chat_stdin "$line"
        done < "$to_read_file"
    else
        write_to_chat_stdin "[ERROR] : '$to_read_file' n'existe pas!"
    fi
}

#fonction pour la commande whoami
whoami(){
    local username="$user"
    write_to_chat_stdin "$username"
}

#fonction pour la commande au revoir
goodbye(){
    write_to_chat_stdin "Au revoir !"
}

unknown_command(){
    write_to_chat_stdin "ðŸ¤– ?"
}

check_listebot_file(){
    local user_command="$1"
    command_found=0
    while IFS= read -r line; do
        first_word=$(echo "$line" | awk '{print $1}')
        if [[ "$first_word" == "$user_command" ]]; then
            command_found=1
            response=$(echo "$line" | awk '{for (i=2; i<=NF; i++) printf $i" "; print ""}')
            write_to_chat_stdin "$response"
            break
        fi    
    done < "liste-bot.txt"
    if [[ "$command_found" == 0 ]]; then
        unknown_command
    fi
}



while true; do
    # on verifie que le programme chat qu'on a lance existe toujours, si oui on va lire et ecrire dans ses stdin et stdout
    if ! kill -0 "$chat_pid" 2>/dev/null; then
        break
    fi

    # on lit le output de chat et ensuite on traite la commande
    if read -t 1 chat_output <&${COPROC_READ}; then
        command=$(process_chat_output "$chat_output")

        case "$command" in 
            "liste") 
                 list_current_directory
            ;;
            li\ *)
                to_read_file="$(echo "${command#li }" | xargs)"
                read_file "$to_read_file"
            ;;
            "au revoir") 
                goodbye
                kill "$coproc_pid"
                kill -SIGTERM "$chat_pid"
                break
            ;;
            "qui suis-je")
            whoami
            ;;
            *)
            #else checker les autre commands
            check_listebot_file "$command"
            ;;
        esac


    fi

done



wait $coproc_pid

# Clean up
exec {COPROC_READ}<&-
exec {COPROC_WRITE}>&-

# quitter
exit 0
